-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module LibraryApi.Query exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import LibraryApi.InputObject
import LibraryApi.Interface
import LibraryApi.Object
import LibraryApi.Scalar
import LibraryApi.ScalarCodecs
import LibraryApi.Union


type alias AuthorsRequiredArguments =
    { name : String }


authors :
    AuthorsRequiredArguments
    -> SelectionSet decodesTo LibraryApi.Object.Author
    -> SelectionSet (List decodesTo) RootQuery
authors requiredArgs____ object____ =
    Object.selectionForCompositeField "authors" [ Argument.required "name" requiredArgs____.name Encode.string ] object____ (Basics.identity >> Decode.list)


type alias BooksRequiredArguments =
    { title : String }


books :
    BooksRequiredArguments
    -> SelectionSet decodesTo LibraryApi.Object.Book
    -> SelectionSet (List decodesTo) RootQuery
books requiredArgs____ object____ =
    Object.selectionForCompositeField "books" [ Argument.required "title" requiredArgs____.title Encode.string ] object____ (Basics.identity >> Decode.list)
