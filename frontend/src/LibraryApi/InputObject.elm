-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module LibraryApi.InputObject exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import LibraryApi.Interface
import LibraryApi.Object
import LibraryApi.Scalar
import LibraryApi.ScalarCodecs
import LibraryApi.Union


buildNewAuthor :
    NewAuthorRequiredFields
    -> NewAuthor
buildNewAuthor required____ =
    { name = required____.name }


type alias NewAuthorRequiredFields =
    { name : String }


{-| Type for the NewAuthor input object.
-}
type alias NewAuthor =
    { name : String }


{-| Encode a NewAuthor into a value that can be used as an argument.
-}
encodeNewAuthor : NewAuthor -> Value
encodeNewAuthor input____ =
    Encode.maybeObject
        [ ( "name", Encode.string input____.name |> Just ) ]


buildNewBook :
    NewBookRequiredFields
    -> NewBook
buildNewBook required____ =
    { title = required____.title, authorId = required____.authorId, imageUrl = required____.imageUrl }


type alias NewBookRequiredFields =
    { title : String
    , authorId : Int
    , imageUrl : String
    }


{-| Type for the NewBook input object.
-}
type alias NewBook =
    { title : String
    , authorId : Int
    , imageUrl : String
    }


{-| Encode a NewBook into a value that can be used as an argument.
-}
encodeNewBook : NewBook -> Value
encodeNewBook input____ =
    Encode.maybeObject
        [ ( "title", Encode.string input____.title |> Just ), ( "authorId", Encode.int input____.authorId |> Just ), ( "imageUrl", Encode.string input____.imageUrl |> Just ) ]
